# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Sprint contributors
# This file is distributed under the same license as the PyMC-Data Umbrella Sprint package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyMC-Data Umbrella Sprint 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-19 03:05+0000\n"
"PO-Revision-Date: 2022-12-08 19:34+0000\n"
"Language-Team: Spanish (https://www.transifex.com/pymc/teams/158248/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;\n"

#: ../sprint/tutorials/docstring_tutorial.md:2
#: d41f1d78f4aa4bd7a655ff725d13dced
msgid "Your first contribution to PyMC"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:3
#: 7324cec15dc44aadbfd41fbd6e3cd735
msgid ""
"This tutorial will guide you in submitting your first {abbr}`PR (Pull "
"Request)` to the [pymc](https://github.com/pymc-devs/pymc) repository. We "
"have tried to cover all of the steps and to be clear with the expected "
"result at each step is."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:7
#: 2b1280ea541d4730aafbab8580b9d66d
msgid ""
"You will start cloning the pymc repository, installing the requirements "
"you'll need to contribute, making some changes to a docstring of your choice"
" and submitting a pull request."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:11
#: bd02cd87a41d46e7b7c7e61befc4a433
msgid "Disclaimer"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:12
#: bbaa4b7035c646558fea75f65b1ab84f
msgid ""
"This is a tutorial as defined in [diataxis](https://diataxis.fr/tutorials/)."
" Here are some things to take into account:"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:15
#: 94983ae5138f455cb9e7edf2e5cba67f
msgid ""
"**Do I need to follow each step exactly as explained?** No, but we strongly "
"recommend you follow them. Once you have submitted your first PR and feel "
"comfortable with the process then you can start experimenting and making it "
"your own."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:18
#: 0f8839867b0f4422ac3c54837d23eec8
msgid ""
"**Do I need to submit a docstring edit as my first PR?** No, but again, we "
"strongly recommend you do. This will allow you to separate the contribution "
"workflow from the contribution content. We will be able to help you out "
"along the process much better if you follow these steps, as we'll have a "
"clear idea of where you stand at all times. We believe this will help you "
"get comfortable with the tooling and infrastructure (git, virtual "
"environments, GitHub PRs and {abbr}`CI (Continuous Integration)`) as quickly"
" as possible so you can then focus on the content of your next PRs."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:25
#: 161ea9fcd2174d75a75bbfb691a7979c
msgid ""
"**Will I understand the reasons for each step?** No, the goal of this "
"tutorial is to teach you to do and through doing."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:29
#: 1acb5c7dfcd0469186770723a5744de0
msgid ""
"If you prefer video to written content you can watch {ref}`Reshama "
"<organizers>` go over this guide and submit a PR to PyMC in the following "
"video:"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:35
#: fc8ebbd880744bcca1175a6ca83f384a
msgid "Prepare your environment"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:37
#: 8a9f40e5deda43bab19723c310211313
msgid ""
"If you don't have your system configured yet, you can follow the "
"instructions in the {ref}`environment_setup` tutorial."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:39
#: f13954f99c0b4df1aee53d2df00018cd
msgid "Choose a docstring"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:40
#: 80288f19ed144f5f8a0b32edb9db07bf
msgid ""
"Go to the [PyMC API "
"documentation](https://www.pymc.io/projects/docs/en/latest/api.html), click "
"on the module (and submodule if needed) that calls you the most and choose a"
" docstring on which to work."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:45
#: 0062236f790c4c7da05afe377d5a18a1
msgid ""
"This tutorial follows the process of updating `pymc.Uniform` and pairs "
"general comments about updating docstrings with specific comments about "
"applying those changes to `pymc.Uniform`."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:49
#: d810c7c24b44453bb11811a01ac69ef8
msgid ""
"The docstring is available at the {ref}`sample_docstring` page, I updated "
"the docstring in PyMC while writing this guide."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:53
#: c333e778193746428aa4ed8353481b35
msgid ""
"Once you have chosen, go to our [issue tracker](https://github.com/pymc-"
"devs/pymc/issues/5459), check nobody is already working on it and comment "
"that you are going to update it."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:57
#: f3687325977549ffb32c321fbc2d47d7
msgid ""
"Remember that function and keep the tab open (or save the link for later)"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:60
#: 6faa2d11284342c4bbfa61d0e843339a
msgid "Open the file with your text editor"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:61
#: 6e3c59e37650495f90d31c5003c3e338
msgid ""
"Open the file containing the docstring you chose to edit with your text "
"editor. The file will be inside the `pymc` folder, but it probably won't be "
"straightforward to guess just from the name of the function or class."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:65
#: 7edf64059c254323b710b411ac8d2572
msgid ""
"Go back to the API page and click on the \"[source]\" button at the right of"
" the call signature."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:68
#: d7120ba7efbc455f812a3ba6b20e1606
msgid "![source_button](../images/source_button.png)"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:68
#: a474792c930448998dca4da33d055f0f
msgid "source_button"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:70
#: dcaf9a3c7ab24473ac20a2fcdeb95e85
msgid ""
"Now take a look at the url. Here is what it shows for {class}`pymc.Uniform`:"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:76
#: ef572c2ffc324feb8eeefd90631ba450
msgid ""
"The file with the definition of the `Uniform` class and its docstring is "
"`pymc/distributions/continuous.py`, the path that comes after `_modules` "
"with a `.py` extension."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:80
#: 92d3fb5d67d54ec0a4df032b469ac48b
msgid "Edit the docstring"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:81
#: fce5f178555243d7b9463c587b4e071c
msgid ""
"The changes you have to do are making sure that the docstring is following "
"[numpydoc](https://numpydoc.readthedocs.io/en/latest/format.html#sections) "
"convention. We have some extra conventions on top of that, which I have "
"explained here but they are only relevant for some sections, most of the "
"time you'll follow numpydoc directly."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:86
#: 6f2f187cfc6e4ec6b3b71ecc5423cb2f
msgid ""
"Open the [numpydoc style "
"guide](https://numpydoc.readthedocs.io/en/latest/format.html#sections) side "
"by side or in a different window. I am updating the docstring of "
"{ref}`pymc.Uniform <sample_docstring>` as an example."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:90
#: ffbddde8594b4c4b8c1e8a2ff33b3f5b
msgid ""
"You have to review section by section to make sure everything is well "
"documented. If you have chosen a class that is not a distribution (unlike "
"this example where we are working on the `pymc.Uniform` distribution), you "
"should review the docstrings of all the methods (only if they already exist "
"though, no need to write missing docstrings). Otherwise, you should work "
"only on the function or class docstring. We will therefore ignore the "
"docstrings of the `logcdf`, `get_moment` and `dist` methods."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:97
#: 91b817e9ba47422c8af1614ab84cf1b9
msgid "Section independent comments"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:98
#: c89a4a0fd37f44c6a658d00f4e1257d6
msgid ""
"Only the short summary section is required. The rest should be used when "
"relevant. As a rule, if a section is missing, ignore it for now. If you "
"think it should be added, take a note and let us know when you open the PR."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:102
#: fd022d94fefb4ce2990ad9064a5ad07c
msgid ""
"If you find instances of the plot directive `.. plot::`, make sure they are "
"either on the extended summary or examples section and that they use the "
"`close-figs` context. It should look like:"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:113
#: c1f1f93503a14db68f953af1ffa145c6
msgid "Short summary"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:114
#: 5d045fddee2247b6ad5c98ce648a220e
msgid ""
"_General comments:_ Make sure there is a (preferably single line) short "
"description of the object. In most cases you'll need to ignore the \"not use"
" variable names or the function name\" rule."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:117
#: ../sprint/tutorials/docstring_tutorial.md:123
#: ../sprint/tutorials/docstring_tutorial.md:194
#: 2b96a740a51346bbb3dcc8c2d7265a49 7010bb2c132b4a84a8318890eea46329
#: 2dd16e109f434cabb10e386c9cd314f8
msgid "_pymc.Uniform class docstring:_ {fas}`check`"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:119
#: f59fde7943f447f091a8933bd3d6dc24
msgid "Deprecation warning"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:120
#: 907778ea90ce4c2db5544a670e97d374
msgid ""
"_General comments:_ There should be no deprecation warnings, we use a "
"decorator for that. If you find a docstring with one, take a note, do not "
"modify it and let us know when you open the PR."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:125
#: 70a83bd9708940fcb3541e48eb3379a9
msgid "Extended summary"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:126
#: 46299d4e7071495993e75772fc86e04e
msgid ""
"_General comments:_ This section is quite free and will probably need no "
"modifications other than maybe directive updates or moving some code to the "
"notes section."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:128
#: 0efbe68e54b6496cbad5f87a23757dba
msgid ""
"_pymc.Uniform class docstring:_ Missing close figs in the plot directive."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:130
#: f0d59006aec94f51b3084cdd29361be1
msgid "Parameters"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:131
#: 0eef0b452e2a4e98afbbb67ab05c46a4
msgid ""
"_General comments:_ This is the section that will most probably need more "
"work. Points to add or emphasize in addition to the advise on numpydoc:"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:133
#: 50e004598a8e41819fadd8e9c21a9794
msgid ""
"The colon between an argument name and it's type must be both **preceded and"
" followed** by a space."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:135
#: 55f05c21fff7445cafed9c3b819f11e4
msgid ""
"Type hints should go in the call signature, not in the docstring. "
"`Optional[Union[str, int]]` is not adequate for a docstring, it should be "
"`str or int, optional`. Type hints target machines, docstrings target "
"humans."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:138
#: 4d8160bd5a4d4458911046d34c917aa9
msgid ""
"Optional parameters must be indicated with `, optional` or `, default "
"<value>`. If the default value is of the documented type and used directly, "
"using default instead of optional is preferred. However, if the default "
"value depends on other parameters or is a placeholder (i.e. it is very "
"common to use `None` for kwarg type arguments) then optional should be used,"
" explaining the default in the description."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:144
#: ac893d65047d4a1caee1fb67f69896ad
msgid ""
"In type descriptions. We have several aliases available to keep raw "
"docstrings short and clear while generating still a nice html page with all "
"the correct links:"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:146
#: 7d33ec1668144a618ded540ae3399237
msgid ""
"**`tensor_like`:** One of the most common (if not the most common) aliases. "
"It should be used in all parameters that take an aesara tensor or any object"
" that can be converted to it. In general, you'll have to change `tensor`, "
"`aesara tensor` (including combinations with different capitalization, dot "
"or hyphen in between) to `tensor_like`."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:151
#: c87db70e370f42c3bc278dd8c1a3d9d0
msgid ""
"**`TensorVariable`:** Similar to `tensor_like` but should only be used for "
"parameters that won't be converted internally and need to be Aesara tensors "
"before passing them to the arguments. Use `TensorVariable`, without extra "
"quotes or backticks. Ask if you are unsure about using `tensor_like` or "
"`TensorVariable`."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:155
#: dfe4d27bb9ba4fc0b28aa06bdeddc1e6
msgid ""
"**`RandomVariable`:** Change `var`, `random var`, `aesara var` and similar "
"concepts should be `RandomVariable`"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:156
#: b9bc78d1ded44ac2bb8e1d798a7faa16
msgid ""
"**`array_like`:** Change `array like` or `array-like` to `array_like` with "
"an underscore. If you encounter this in a returned parameter, note it in the"
" PR description."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:158
#: b235003b6222424dbb1cbd48f119b9f7
msgid ""
"**`ndarray`:** Change `np.ndarray` or `numpy.ndarray` to `ndarray`. However,"
" if you encounter this in an input argument, note it in the PR description."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:160
#: 5854649682c046508747a92180b68305
msgid ""
"**`Covariance`** and **`Mean`**: _within the gp module only_ `covariance`, "
"`covariance objects`, `Covariance instances` and the like should be modified"
" to this. Same for `Mean`"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:163
#: 6c49aaff39ce4bf2b9e5961c231eeec2
msgid ""
"**`InferenceData`**: change things like `arviz.InferenceData` or `inference "
"data` to this."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:164
#: 1d5c389cfbcb4370a335ed7fe811ce4f
msgid ""
"**`MultiTrace`** and **`BaseTrace`**: change anything containing this in the"
" type to them. The most probable thing to find is "
"`pymc.backends.base.MultiTrace`"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:166
#: 7e5dde626e71446bbdc8a305378a662a
msgid "**`Point`**: change `pymc.Point`, `point` and similars to this"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:167
#: dd9115c773994bc0873445abd44b20cb
msgid ""
"**`SMC_kernel`**: _within the smc module_ change references to kernel, smc "
"kernel and the like to this. Note the underscore and capitalization!"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:169
#: 197aef46af134e80bfad47b47e679f99
msgid ""
"**`Aesara_Op`**: change `Aesara Op`, `Op` and variations to `Aesara_Op`, "
"note the underscore and capitalization!"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:171
#: 86558e59b1c44aa1b6bf0aec3c322e00
msgid ""
"We might also realize we are missing an important alias thanks to your "
"contributions. Check the [conf.py](https://github.com/pymc-"
"devs/pymc/blob/main/docs/source/conf.py) file from time to time to see if "
"there are new aliases not explained here. Aliases are defined in the "
"`numpydoc_xref_aliases` dict."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:176
#: 1942b8e48a09421a9d839fb512b05f21
msgid "_pymc.Uniform class docstring:_"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:177
#: 1ced2d0737e544a2ad5cd813575db949
msgid "There is no space between argument name and colon"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:178
#: 3e057ae25e594cca8bf7b9c7621eca94
msgid ""
"Both arguments are actually optional. In Distributions, this can't be seen "
"in the class itself but in the `dist` method. In the Uniform case, it is "
"`dist(cls, lower=0, upper=1, **kwargs)`. Therefore they are both optional "
"with defaults to 0 and 1 respectively."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:182
#: c5b7d38df60e43dba141d24b279418ae
msgid ""
"Input parameters to distributions can be Aesara tensors, scalars or NumPy "
"arrays. Therefore, `tensor_like` should be used. In this case, the "
"parameters of the distribution are real numbers (as opposed to discrete for "
"example) so we will use `tensor_like of float`. For discrete parameters we "
"would use `tensor_like of int`."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:188
#: 3b0f24da4ed441339a862ba2a331f2ae
msgid "Returns and yields"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:189
#: d3993838fed54a59a2a6e192b0cc1507
msgid ""
"_General comments:_ Nothing to add to numpydoc. They follow the style of the"
" parameters section but with the argument name being optional for single "
"outputs. You should look for the same things detailed in parameters section "
"plus making sure that the type (plus name if any) and the description are on"
" different lines."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:196
#: 149ac776f53740dfb17ec822905f2d81
msgid "Commit the changes to git and get your PR ready"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:198
#: bb3c88696fc04e47b7bc961bde0102d6
msgid "Great! You are ready to do your PR now."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:200
#: 845bd03a1c654da7b56361e2445088f0
msgid ""
"You can follow the {ref}`PR Tutorial <pr_tutorial>` which explains how you "
"can do a PR to PyMC."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:202
#: 2a4828ddb6414f23949f1c27df9b1fdd
msgid ""
"Your PR will be reviewed and hopefully merged by the PyMC team. After that, "
"you can  properly celebrate your first contribution to PyMC! Thanks for "
"contributing!"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:205
#: 14a563fa83bc495d87898b72643108ed
msgid "{fas}`heart;sd-fs-1 sd-text-danger`"
msgstr ""
