# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Sprint contributors
# This file is distributed under the same license as the PyMC-Data Umbrella Sprint package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Anavelyz Perez, 2023
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyMC-Data Umbrella Sprint 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-18 09:43+0000\n"
"PO-Revision-Date: 2022-12-08 19:34+0000\n"
"Last-Translator: Anavelyz Perez, 2023\n"
"Language-Team: Spanish (https://www.transifex.com/pymc/teams/158248/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;\n"

#: ../sprint/tutorials/docstring_tutorial.md:2
#: 3b73060d41a94cd8b2addaa2b0959c83
msgid "Your first contribution to PyMC"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:3
#: fd0125ea1055487ba623ec361cd00e42
msgid ""
"This tutorial will guide you in submitting your first {abbr}`PR (Pull "
"Request)` to the [pymc](https://github.com/pymc-devs/pymc) repository. We "
"have tried to cover all of the steps and to be clear with the expected "
"result at each step is."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:7
#: a0fa6cfa6cd24bf29371fcafe288a85b
msgid ""
"You will start cloning the pymc repository, installing the requirements "
"you'll need to contribute, making some changes to a docstring of your choice"
" and submitting a pull request."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:11
#: dcb631d87632472d87996a25d0a113c3
msgid "Disclaimer"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:12
#: e2c7d51c280f434a99cdd6b70bb0a8c0
msgid ""
"This is a tutorial as defined in [diataxis](https://diataxis.fr/tutorials/)."
" Here are some things to take into account:"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:15
#: 3bb4eba2ff7943fd8af63b9d048a86c5
msgid ""
"**Do I need to follow each step exactly as explained?** No, but we strongly "
"recommend you follow them. Once you have submitted your first PR and feel "
"comfortable with the process then you can start experimenting and making it "
"your own."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:18
#: e5b77f6330c147b091849a27baee84c4
msgid ""
"**Do I need to submit a docstring edit as my first PR?** No, but again, we "
"strongly recommend you do. This will allow you to separate the contribution "
"workflow from the contribution content. We will be able to help you out "
"along the process much better if you follow these steps, as we'll have a "
"clear idea of where you stand at all times. We believe this will help you "
"get comfortable with the tooling and infrastructure (git, virtual "
"environments, GitHub PRs and {abbr}`CI (Continuous Integration)`) as quickly"
" as possible so you can then focus on the content of your next PRs."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:25
#: 97c4bb18e5f24a9c8959cab2578c6b25
msgid ""
"**Will I understand the reasons for each step?** No, the goal of this "
"tutorial is to teach you to do and through doing."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:29
#: 57d78f0a1d3a48fc966b1a3adcf5f77f
msgid ""
"If you prefer video to written content you can watch {ref}`Reshama "
"<organizers>` go over this guide and submit a PR to PyMC in the following "
"video:"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:35
#: 7ff388d2794b45928280d96f082c5e03
msgid "Prepare your environment"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:37
#: 633ab2e23f084464824bc8520e17a239
msgid ""
"If you don't have your system configured yet, you can follow the "
"instructions in the {ref}`environment_setup` tutorial."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:39
#: 46fa24321f474536bc116983381a1e86
msgid "Choose a docstring"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:40
#: 79e4861df0864b698ae9d1b365fd32db
msgid ""
"Go to the [PyMC API "
"documentation](https://www.pymc.io/projects/docs/en/latest/api.html), click "
"on the module (and submodule if needed) that calls you the most and choose a"
" docstring on which to work."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:45
#: c2b4a7cbe34f43c6b7332dd639a0632c
msgid ""
"This tutorial follows the process of updating `pymc.Uniform` and pairs "
"general comments about updating docstrings with specific comments about "
"applying those changes to `pymc.Uniform`."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:49
#: f60d1b1ade244f1a937c1cb59ab9ed36
msgid ""
"The docstring is available at the {ref}`sample_docstring` page, I updated "
"the docstring in PyMC while writing this guide."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:53
#: 1085902ef20c4eb2845d1a4f15b5834d
msgid ""
"Once you have chosen, go to our [issue tracker](https://github.com/pymc-"
"devs/pymc/issues/5459), check nobody is already working on it and comment "
"that you are going to update it."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:57
#: 11c30741a62a4aa68c00823b9b23909c
msgid ""
"Remember that function and keep the tab open (or save the link for later)"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:60
#: 96ffe4fbf3014be2b150ef34fa11e78f
msgid "Open the file with your text editor"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:61
#: 471fb69b172e41189aa6bb0fc21e6cdf
msgid ""
"Open the file containing the docstring you chose to edit with your text "
"editor. The file will be inside the `pymc` folder, but it probably won't be "
"straightforward to guess just from the name of the function or class."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:65
#: ba5e57cbfcc549418ca001edb323eeb3
msgid ""
"Go back to the API page and click on the \"[source]\" button at the right of"
" the call signature."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:68
#: e9d76a34cbc247a5b0fe8395479126fc
msgid "![source_button](../images/source_button.png)"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:68
#: 890b36266e884215b32370ce226b8617
msgid "source_button"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:70
#: 65f2ea2d1917463288a5e98eea5ea67d
msgid ""
"Now take a look at the url. Here is what it shows for {class}`pymc.Uniform`:"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:76
#: 2dcdb05e8bf448aea1f1e7022d3148b4
msgid ""
"The file with the definition of the `Uniform` class and its docstring is "
"`pymc/distributions/continuous.py`, the path that comes after `_modules` "
"with a `.py` extension."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:80
#: 77bba53972f14767a6a9bce90f85d7b3
msgid "Edit the docstring"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:81
#: 485da0302f1e45cc8e84aa391d0a5e31
msgid ""
"The changes you have to do are making sure that the docstring is following "
"[numpydoc](https://numpydoc.readthedocs.io/en/latest/format.html#sections) "
"convention. We have some extra conventions on top of that, which I have "
"explained here but they are only relevant for some sections, most of the "
"time you'll follow numpydoc directly."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:86
#: 19ab2c827a204479b3064305d569cfac
msgid ""
"Open the [numpydoc style "
"guide](https://numpydoc.readthedocs.io/en/latest/format.html#sections) side "
"by side or in a different window. I am updating the docstring of "
"{ref}`pymc.Uniform <sample_docstring>` as an example."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:90
#: 7db319f6131c4dea8e3eb5a8bc635121
msgid ""
"You have to review section by section to make sure everything is well "
"documented. If you have chosen a class that is not a distribution (unlike "
"this example where we are working on the `pymc.Uniform` distribution), you "
"should review the docstrings of all the methods (only if they already exist "
"though, no need to write missing docstrings). Otherwise, you should work "
"only on the function or class docstring. We will therefore ignore the "
"docstrings of the `logcdf`, `get_moment` and `dist` methods."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:97
#: 88a482744cee4b90bafd3163c2568779
msgid "Section independent comments"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:98
#: a951eaec9c0f4d07bb445a2e04637cc1
msgid ""
"Only the short summary section is required. The rest should be used when "
"relevant. As a rule, if a section is missing, ignore it for now. If you "
"think it should be added, take a note and let us know when you open the PR."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:102
#: c8633a0f92b04948b9c446e803e7c07c
msgid ""
"If you find instances of the plot directive `.. plot::`, make sure they are "
"either on the extended summary or examples section and that they use the "
"`close-figs` context. It should look like:"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:113
#: bc9c004459f548fdb4da88288d2d57e9
msgid "Short summary"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:114
#: 933bd158bfd34dcb8ca046fc2e28ef85
msgid ""
"_General comments:_ Make sure there is a (preferably single line) short "
"description of the object. In most cases you'll need to ignore the \"not use"
" variable names or the function name\" rule."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:117
#: ../sprint/tutorials/docstring_tutorial.md:123
#: ../sprint/tutorials/docstring_tutorial.md:194
#: dc540c7bde0144fc81a161c0b53382f6 f79a7d1d5a5e496892ae18f0d82521d3
#: 663c0398d9db4932ac90d0e3b4229998
msgid "_pymc.Uniform class docstring:_ {fas}`check`"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:119
#: 4af5f4cb6cc84309904113d0c3920593
msgid "Deprecation warning"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:120
#: e05453cfadec47c39f570a7d74fd2e68
msgid ""
"_General comments:_ There should be no deprecation warnings, we use a "
"decorator for that. If you find a docstring with one, take a note, do not "
"modify it and let us know when you open the PR."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:125
#: 62f575470f73407b9894edbb68065b9c
msgid "Extended summary"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:126
#: 5d08af6e75e44abfa78660f02bcc1cf1
msgid ""
"_General comments:_ This section is quite free and will probably need no "
"modifications other than maybe directive updates or moving some code to the "
"notes section."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:128
#: 3a61e0be1d59416dba04d0b69113886e
msgid ""
"_pymc.Uniform class docstring:_ Missing close figs in the plot directive."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:130
#: ff4e7ae3768943d69112c197d78eb779
msgid "Parameters"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:131
#: 19a39f1e6a654af49b9b51f1f64c1d60
msgid ""
"_General comments:_ This is the section that will most probably need more "
"work. Points to add or emphasize in addition to the advise on numpydoc:"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:133
#: ee642c45ec4d46419c2762c52bf919ef
msgid ""
"The colon between an argument name and it's type must be both **preceded and"
" followed** by a space."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:135
#: 918550e2f75847ada442f19185125bfc
msgid ""
"Type hints should go in the call signature, not in the docstring. "
"`Optional[Union[str, int]]` is not adequate for a docstring, it should be "
"`str or int, optional`. Type hints target machines, docstrings target "
"humans."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:138
#: a986fec2fd3c4bc8a9e5dd337f9b5871
msgid ""
"Optional parameters must be indicated with `, optional` or `, default "
"<value>`. If the default value is of the documented type and used directly, "
"using default instead of optional is preferred. However, if the default "
"value depends on other parameters or is a placeholder (i.e. it is very "
"common to use `None` for kwarg type arguments) then optional should be used,"
" explaining the default in the description."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:144
#: fff700264c1e40b699c3937bac6edd1e
msgid ""
"In type descriptions. We have several aliases available to keep raw "
"docstrings short and clear while generating still a nice html page with all "
"the correct links:"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:146
#: 4e4b1d4f711a496084f748fc3c7f4639
msgid ""
"**`tensor_like`:** One of the most common (if not the most common) aliases. "
"It should be used in all parameters that take an aesara tensor or any object"
" that can be converted to it. In general, you'll have to change `tensor`, "
"`aesara tensor` (including combinations with different capitalization, dot "
"or hyphen in between) to `tensor_like`."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:151
#: 458c47d7040244feacaf4a3b5813daa7
msgid ""
"**`TensorVariable`:** Similar to `tensor_like` but should only be used for "
"parameters that won't be converted internally and need to be Aesara tensors "
"before passing them to the arguments. Use `TensorVariable`, without extra "
"quotes or backticks. Ask if you are unsure about using `tensor_like` or "
"`TensorVariable`."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:155
#: 2f096155045144789499d706b9a415f8
msgid ""
"**`RandomVariable`:** Change `var`, `random var`, `aesara var` and similar "
"concepts should be `RandomVariable`"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:156
#: 9146f10914184e5eb73fa1c1d40a18de
msgid ""
"**`array_like`:** Change `array like` or `array-like` to `array_like` with "
"an underscore. If you encounter this in a returned parameter, note it in the"
" PR description."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:158
#: cd90c88c0b8d47d3b62562d1f50e4de8
msgid ""
"**`ndarray`:** Change `np.ndarray` or `numpy.ndarray` to `ndarray`. However,"
" if you encounter this in an input argument, note it in the PR description."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:160
#: 1db69079124d4a8d8fe04737d2c88458
msgid ""
"**`Covariance`** and **`Mean`**: _within the gp module only_ `covariance`, "
"`covariance objects`, `Covariance instances` and the like should be modified"
" to this. Same for `Mean`"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:163
#: c6ea12e294734c599ceaf5691eec4d22
msgid ""
"**`InferenceData`**: change things like `arviz.InferenceData` or `inference "
"data` to this."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:164
#: d2f3d0b08bbc432aa49e70f0ce8df547
msgid ""
"**`MultiTrace`** and **`BaseTrace`**: change anything containing this in the"
" type to them. The most probable thing to find is "
"`pymc.backends.base.MultiTrace`"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:166
#: 0c9bb032d446422fa2918882702cff30
msgid "**`Point`**: change `pymc.Point`, `point` and similars to this"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:167
#: 0a338a3319144494be9fe24cc280af0f
msgid ""
"**`SMC_kernel`**: _within the smc module_ change references to kernel, smc "
"kernel and the like to this. Note the underscore and capitalization!"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:169
#: 08543d61bb4f4964b81fdeaf9674c561
msgid ""
"**`Aesara_Op`**: change `Aesara Op`, `Op` and variations to `Aesara_Op`, "
"note the underscore and capitalization!"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:171
#: a3580c09cf67401aa85b3ac38ef39b92
msgid ""
"We might also realize we are missing an important alias thanks to your "
"contributions. Check the [conf.py](https://github.com/pymc-"
"devs/pymc/blob/main/docs/source/conf.py) file from time to time to see if "
"there are new aliases not explained here. Aliases are defined in the "
"`numpydoc_xref_aliases` dict."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:176
#: 90bd83df26f246d7a06c9b1d9187eee9
msgid "_pymc.Uniform class docstring:_"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:177
#: 843f197fdc2747d5ae4813d69a4469e1
msgid "There is no space between argument name and colon"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:178
#: 08c70274a92742989c3177af9890ddc6
msgid ""
"Both arguments are actually optional. In Distributions, this can't be seen "
"in the class itself but in the `dist` method. In the Uniform case, it is "
"`dist(cls, lower=0, upper=1, **kwargs)`. Therefore they are both optional "
"with defaults to 0 and 1 respectively."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:182
#: ca1a4d7811f249e6b2e7303b9dcf185d
msgid ""
"Input parameters to distributions can be Aesara tensors, scalars or NumPy "
"arrays. Therefore, `tensor_like` should be used. In this case, the "
"parameters of the distribution are real numbers (as opposed to discrete for "
"example) so we will use `tensor_like of float`. For discrete parameters we "
"would use `tensor_like of int`."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:188
#: 2fe89d14006046f1bf737f7f7d84c172
msgid "Returns and yields"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:189
#: 5733831f796a4a3ca32e79e824fcba3b
msgid ""
"_General comments:_ Nothing to add to numpydoc. They follow the style of the"
" parameters section but with the argument name being optional for single "
"outputs. You should look for the same things detailed in parameters section "
"plus making sure that the type (plus name if any) and the description are on"
" different lines."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:196
#: 2b9745c5769f437bb7d22aedba38622e
msgid "Commit the changes to git and get your PR ready"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:198
#: e6a17582bac74128b1f3a9de33bf6808
msgid "Great! You are ready to do your PR now."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:200
#: aefa14c35433431ab2346e41901679c4
msgid ""
"You can follow the {ref}`PR Tutorial <pr_tutorial>` which explains how you "
"can do a PR to PyMC."
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:202
#: 047b948044504a2dbda03aacb71e4949
msgid ""
"Your PR will be reviewed and hopefully merged by the PyMC team. After that, "
"you can  properly celebrate your first contribution to PyMC! Thanks for "
"contributing!"
msgstr ""

#: ../sprint/tutorials/docstring_tutorial.md:205
#: daba005f35774bc6aa275fe372c52dce
msgid "{fas}`heart;sd-fs-1 sd-text-danger`"
msgstr ""
