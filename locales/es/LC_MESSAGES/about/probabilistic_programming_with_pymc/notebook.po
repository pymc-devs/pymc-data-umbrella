# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Sprint contributors
# This file is distributed under the same license as the PyMC-Data Umbrella Sprint package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Anavelyz Perez, 2023
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyMC-Data Umbrella Sprint 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-02 14:37+0000\n"
"PO-Revision-Date: 2022-12-08 19:34+0000\n"
"Last-Translator: Anavelyz Perez, 2023\n"
"Language-Team: Spanish (https://www.transifex.com/pymc/teams/158248/es/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es\n"
"Plural-Forms: nplurals=3; plural=n == 1 ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;\n"

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:10003
#: d2efc7cf4a24483c85cb825703e042d8
msgid "Webinar notebook"
msgstr "Cuaderno del webinar"

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:90002
#: 45ba0063543c4cc1aa52c33a276e0eda
msgid "About this talk"
msgstr "Sobre esta charla"

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:100002
#: 091e368309c14ec3a3c3d89379d7cd05
msgid "Agenda"
msgstr "Agenda"

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:100004
#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:120002
#: 589888fa497e4a49961661ab959d66a6 83c8b21db0304ae9a4e787c7d7c4ee69
msgid "Probabilistic programming from two perspectives"
msgstr "La programación probabilística desde dos perspectivas"

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:100005
#: cfa9f92ec1894b8d9b907c4c0266241f
msgid "Philosophical: storytelling with data"
msgstr "Filosófica: contar historias con datos"

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:100006
#: 62351f7f5ab04d298aef00cceea63447
msgid "Mathematical: Monte Carlo methods"
msgstr "Matemáticas: Métodos Monte Carlo"

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:100007
#: 5132934621174e2fb8454a4f4cdde50a
msgid "Probabilistic programming with PyMC"
msgstr "Programación probabilística con PyMC"

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:100008
#: 737ba07e5a764f8fa74a52ca1006c38f
msgid "The Monty Hall problem"
msgstr "El problema de Monty Hall"

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:100009
#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:690002
#: 7aed936583684465916f726883a4f857 c6ad1d711bbd427c8dbdc4a4b592030e
msgid "Robust regression"
msgstr "Regresión robusta"

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:100010
#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:790002
#: 60c04d7ba1ea4e44b8d1f0a9d008137b 75a8c70c1c0645688c835745e60f29b2
msgid "Hamiltonian Monte Carlo"
msgstr "Monte Carlo hamiltoniano"

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:100011
#: 9b2a5635be6c40b387e2ccf5646e5a86
msgid "Aesara"
msgstr "Aesara"

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:100012
#: 884bd37f7f894552b57115e0724c044a
msgid "Lego? example"
msgstr "¿Lego? ejemplo"

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:100013
#: b0c087ccf02f49ff97773255c703c3a6
msgid "Next Steps"
msgstr "Próximos pasos"

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:110002
#: 66bbb002e5484c42b8334819aa938b57
msgid ""
"All the code that is shown in this webinar can be executed from its website."
" Therefore you have two ways to follow along:"
msgstr ""
"Todo el código que se muestra en este webinar se puede ejecutar desde su "
"página web. Por lo tanto, tienes dos maneras de seguirlo:"

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:110004
#: 60974f75bba2452bb9db3059057dd1f7
msgid ""
"Click on the run code button and execute the code straight from this page"
msgstr ""
"Haz clic en el botón de ejecutar código y ejecuta el código directamente "
"desde esta página"

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:110010
#: 38602ecae8d040589fb7760f32c9b39c
msgid ""
"Clone the GitHub repo: [pymc-devs/pymc-data-"
"umbrella](https://github.com/pymc-devs/pymc-data-umbrella) and follow along "
"locally using Jupyter"
msgstr ""
"Clona el repositorio de GitHub: [pymc-devs/pymc-data-"
"umbrella](https://github.com/pymc-devs/pymc-data-umbrella) y síguelo "
"localmente usando Jupyter"

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:120004
#: d14965b6ce2f4fcc95706d4605d0d221
msgid "Philosophical"
msgstr "Filosófica"

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:120006
#: 5721dbc0fd2f4728bcf730ee1006bcbb
msgid "(Classical) Data science —— inference enables story telling"
msgstr "(Clásica) Ciencia de datos —— la inferencia permite contar historias"

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:130002
#: a71c4ee9be5841d3a391253397ad778f
msgid "Probabilistic programming —— story telling enables inference"
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:140002
#: 35e38442562549e58277c162308be1e7
msgid "Bayesian inference —— quantifying uncertainty"
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:150002
#: f225bd5e0c964c5d8974a7c74725cc2a
msgid "Mathematical"
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:150004
#: 32e489a14f364eb989a4f2e433576459
msgid "Monte Carlo methods"
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:240002
#: 5a61d269df3e4e179836c0b755f42857
msgid "Monte Carlo methods —— approximating (intractible) integrals"
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:240004
#: 106dab7227804340b7d94ef6aadc9ac3
msgid "\\pi = 4 \\int_0^1 \\sqrt{1 - x^2}\\ dx"
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:270002
#: ce776742e1bc432ba06df04148c76320
msgid "Bayes' Theorem —— (often) intractible integrals"
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:270004
#: 03f8bf143eea4268af8d1afc22b89d55
msgid ""
"f(\\theta\\ |\\ \\mathcal{D}) = \\frac{f(\\mathcal{D}\\ |\\ \\theta) \\cdot "
"f(\\theta)}{\\color{red}{\\int f(\\mathcal{D}\\ |\\ \\theta) \\cdot "
"f(\\theta)\\ d\\theta}}"
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:270006
#: f35bcc75a711471382b6535c40d92ca5
msgid ""
"Forcing <span style=\"color:red;\">this term</span> to be analytically "
"tractible drastically limits the richness of the models we can consider."
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:280002
#: f4ce4f2ccedc43c79b6926e57f4ad040
msgid "Probabilistic Programming with PyMC"
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:280004
#: 232aa6dacec04e24b585a523ce8a6887
msgid "The Monty Hall Problem"
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:290002
#: b496979a9bd74e2cb7eb331b26d437d3
msgid "Mathematical solution"
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:290004
#: fe5eb095e5424c5a85c33df30e90f8ad
msgid ""
"\n"
"\\begin{align*}\n"
"P(\\text{Behind 1}\\ |\\ \\text{Opened 3})\n"
"    & = \\frac{P(\\text{Opened 3}\\ |\\ \\text{Behind 1}) \\cdot P(\\text{Behind 1})}{P(\\text{Opened 3})} \\\\\n"
"P(\\text{Opened 3})\n"
"    & = P(\\text{Opened 3}\\ |\\ \\text{Behind 1}) \\cdot P(\\text{Behind 1}) \\\\\n"
"    & \\ \\ \\ \\ + P(\\text{Opened 3}\\ |\\ \\text{Behind 2}) \\cdot P(\\text{Behind 2}) \\\\\n"
"    & \\ \\ \\ \\ + P(\\text{Opened 3}\\ |\\ \\text{Behind 3}) \\cdot P(\\text{Behind 3}) \\\\\n"
"    & = \\frac{1}{2} \\cdot \\frac{1}{3} + 1 \\cdot \\frac{1}{3} + 0 \\cdot \\frac{1}{3}\n"
"      = \\frac{1}{2} \\\\\n"
"P(\\text{Behind 1}\\ |\\ \\text{Opened 3})\n"
"    & = \\frac{\\frac{1}{2} \\cdot \\frac{1}{3}}{\\frac{1}{2}}\n"
"      = \\frac{1}{3}\n"
"\\end{align*}\n"
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:300002
#: 3a686a1ac34c477fba8e9f931d8f08bb
msgid "PyMC solution"
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:300004
#: 635b346aaab947d5a8935b8ab0ec4247
msgid ""
"Initially, we have no information about which door the prize is behind."
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:320002
#: 724c635f28e54cc392797493958b721e
msgid "If we choose the first door:"
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:350002
#: c5b6703be28d40efa51dd7355bf57205
msgid "Monty opened the third door, revealing a goat."
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:420002
#: b3526ef2900548e0b26e982f794e952e
msgid "Two key components"
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:420004
#: 6a6f2a778eae43e9a79a9d8c30b8a1bc
msgid ""
"[PyMC distributions](https://docs.pymc.io/en/latest/api/distributions.html)"
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:430011
#: 3c46bdf52dbe4cbfbfc5bbaa572618af
msgid ""
"Aesara is a Python library that allows you to define, optimize, and evaluate"
" mathematical expressions involving multi-dimensional arrays efficiently. "
"Aesara features:"
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:430013
#: 5b893091ee18438cba78cb081aa5b4e7
msgid ""
"Tight integration with NumPy – Use numpy.ndarray in Aesara-compiled "
"functions."
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:430014
#: a7cf8763278a4f9faea43d94ce57035d
msgid ""
"**Efficient symbolic differentiation – Aesara does your derivatives for "
"functions with one or many inputs.**"
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:430015
#: c3ec84b4df1c4f40888e36a0367b5971
msgid ""
"Speed and stability optimizations – Get the right answer for log(1+x) even "
"when x is really tiny."
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:430016
#: be98ef962e9a4a508d83df1d2d969bc9
msgid "Dynamic C/JAX/Numba code generation – Evaluate expressions faster."
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:430018
#: ba30abb755d7498db32492f3fa8e5e2b
msgid ""
"Aesara is based on Theano, which has been powering large-scale "
"computationally intensive scientific investigations since 2007."
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:440002
#: 9f73b8c2e6d547658963fe81cdd55f47
msgid "Robust Regression"
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:440004
#: 8549ec9695f94bd7a658ff4977926373
msgid ""
"[Anscombe's quartet](https://en.wikipedia.org/wiki/Anscombe%27s_quartet)"
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:450002
#: 2b841c4189cc49e4931308ee0f043e11
msgid ""
"This code for plotting Anscombe's quartet is adapted from the [`matplotlib` "
"documentation](https://matplotlib.org/stable/gallery/specialty_plots/anscombe.html)."
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:480002
#: 6c3bcd2e11ec468fb29f117f060493c1
msgid "Ordinary least squares"
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:480004
#: 299e7ffa20024c97835b49933cbe0e31
msgid ""
"**Assumption:** All values of $m, b \\in \\mathbb{R}$, $\\sigma > 0$ are "
"equally likely"
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:500002
#: d2046617a81443048e78c5c2cb5e2d45
msgid "y\\ |\\ x = m x + b + \\varepsilon,\\ \\varepsilon \\sim N(0, \\sigma^2)"
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:510002
#: f84e1d52bf0b41f3a712f746725df179
msgid "This is equivalent to"
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:510004
#: bc951bbdf37a45f2a822c7e2d21f5eee
msgid "y\\ |\\ x \\sim N(m x + b, \\sigma^2)"
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:560002
#: 0acff4addc7347109a82ab4a64f41d0c
msgid "Two more key components"
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:560013
#: c8f41d0a1bee4d0fa0afb9c8ca43485a
msgid ""
"ArviZ is a Python package for exploratory analysis of Bayesian models. "
"Includes functions for posterior analysis, data storage, sample diagnostics,"
" model checking, and comparison."
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:560015
#: 76a4b48f119e4917bbceac6cc8c6417c
msgid ""
"The goal is to provide backend-agnostic tools for diagnostics and "
"visualizations of Bayesian inference in Python, by first converting "
"inference data into xarray objects. See here for more on **xarray** and "
"ArviZ usage and here for more on InferenceData structure and specification."
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:590011
#: 16a048af3e094a75bc2fd67156e59533
msgid ""
"xarray (formerly xray) is an open source project and Python package that "
"makes working with labelled multi-dimensional arrays simple, efficient, and "
"fun!"
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:590013
#: 5313540001f4406082ce3f9351126286
msgid ""
"Xarray is inspired by and borrows heavily from pandas, the popular data "
"analysis package focused on labelled tabular data. It is particularly "
"tailored to working with netCDF files, which were the source of xarray’s "
"data model, and integrates tightly with dask for parallel computing."
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:640002
#: 8adaea243943480d973d6c7a152fe8a1
msgid "Ridge regression"
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:640004
#: 1c7f6bf019524f9bb20e196dfcf874d9
msgid "Ridge regression is equivalent to normal priors on $m$ and $b$."
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:640006
#: db50142dd1b547eb9c34acdbe1223f08
msgid ""
"\n"
"\\begin{align*}\n"
"    m, b\n"
"        & \\sim N(0, 1) \\\\\n"
"    \\sigma\n"
"        & \\sim \\text{Half}-N(1) \\\\\n"
"    y\\ |\\ x\n"
"        & \\sim N(m x + b, \\sigma^2)\n"
"\\end{align*}\n"
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:690004
#: a4d5606f961843c3963e59e3a1b026a7
msgid ""
"[Student's t-distribution](https://en.wikipedia.org/wiki/Student%27s_t-"
"distribution) has fatter tails than the normal distribution."
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:730002
#: dd846b5cfc6442d989e3d64c8642fdc7
msgid "A Student t-likelihood is less sensitive to outliers"
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:730004
#: 557abf3c31fb45e7b51c941d8b05f11a
msgid ""
"\n"
"\\begin{align*}\n"
"    \\nu\n"
"        & \\sim U(1, 10) \\\\\n"
"    y\\ |\\ x\n"
"        & \\sim \\mathcal{T}_{\\nu}(m x + b, \\sigma^2)\n"
"\\end{align*}\n"
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:790004
#: 105d98cf676c4a7db54a9c752dc2ffa4
msgid "Bayesian inference ⇔ Differential geometry"
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:800002
#: 932b94f7bfd94235aa5f917d9fb8576b
msgid "The Curse of Dimensionality"
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:840002
#: b4c22b4f872d4c0b87c2744c593772e7
msgid "Automating calculus with `aesara`"
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:840004
#: 56da93f0b4334e668aa9c656b454cd49
msgid "\\frac{d}{dx} \\left(x^3\\right) = 3 x^2"
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:870002
#: 625482f7c6184b2a81b8c0f0314a697f
msgid "A Bayesian Analysis of Lego Prices"
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:880002
#: 232b7d13c50b4bbbbb2f3b5db5861c1b
msgid "Scraped from [Brickset](https://brickset.com/)"
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:1030002
#: f9734eb7458a42db8bde0fbdd5da96f1
msgid "Price model"
msgstr "Modelo de precios"

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:1030004
#: 557a353562754ca7976e1f559aec62e0
msgid ""
"\\log \\text{Price} \\approx (\\text{Year intercept}) + (\\text{Theme "
"intercept}) + \\left((\\text{Year slope}) + (\\text{Theme slope})\\right) "
"\\cdot \\log \\text{Pieces}"
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:1110002
#: ea3618c9c0084189b8335e64fcf51427
msgid "Why _Hamiltonian_ Monte Carlo?"
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:1180002
#: 36018fa73c4046ad99e7bb6f7e5c299a
msgid "This model has"
msgstr "Este modelo tiene"

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:1210002
#: 7671850b8a62467bba50c64e2936dd4e
msgid "parameters"
msgstr "parámetros"

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:1330002
#: eab1a337976345b09c4bbecb99ee9e52
msgid ""
"To get the same effective sample size as adaptive HMC (NUTS) with "
"Metropolis-Hastings would required approximately"
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:1350002
#: c1fb367d364a4e668d9d712f06b8226b
msgid "hours."
msgstr "horas."

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:1370002
#: 3dbb95321f3c43e8b845ad76c57ed7f5
msgid "Is Darth Vader's Meditation Chamber priced fairly?"
msgstr ""

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:1470002
#: 7058286f5adc47f18fcd18548ba2bd3e
msgid "Next steps"
msgstr "Próximos pasos"

#: ../about/probabilistic_programming_with_pymc/notebook.ipynb:1480002
#: 50ce5336003549599df362baea07ba34
msgid "Thank you!"
msgstr "¡Gracias!"
